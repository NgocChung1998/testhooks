/* eslint-disable react/jsx-no-comment-textnodes */
import React, { useState, useEffect } from 'react';
import './App.scss';
import ColorBox from './Compunents/ColorBox';
import TodoList from './Compunents/TodoList';
import TodoForm from './Compunents/TodoForm';
import PostList from './Compunents/PostList';
import Pagination from './Compunents/Pagination';
import queryString from 'query-string'
import PostFilterForm from './Compunents/PostFilterForm';
import Clock from './Compunents/Clock';

function App() {
  const [todoList,setTodoList]=useState([
    { id: 1, title: 'I love Easy Frontend! üòç' },
    { id: 2, title: 'We love Easy Frontend! ü•∞' },
    { id: 3, title: 'They love Easy Frontend! üöÄ' },
  ])
    const [postList,setPostList]=useState([]);
    const [pagination,setPagination]=useState({
      _page:1,
      _limit:10,
      _totalRows:1,
    })
    const [filters,setFilters]=useState({
      _limit:10,
      _page:1,
      // title_like:'quis'
    })
    // ch·ªâ ch·∫°y 1 l·∫ßn
    // useEffect(()=>{
    //   async function fetchPostLink(params) {
    //     try {
    //       const requestUrl='http://js-post-api.herokuapp.com/api/posts?_limit=10&_page=1';
    //       const response=await fetch(requestUrl)
    //       const responseJson=await response.json()
    //       console.log({responseJson});
    //       const {data}=responseJson;
    //       setPostList(data)
    //     } catch (error) {
    //       console.log('Err',error.message)
    //     }
     
        
    //   }
    //   console.log("Have arr")
    //   fetchPostLink();
    // },[])

    // ch·∫°y m·ªói kh√¨ filter thay ƒë·ªïi
    useEffect(()=>{
      async function fetchPostLink(params) {
        try {
          // c√†i query string:npm i --save query-string
          //chuy·ªÉn t·ª´ Obj filter sang chu·ªói VD:t·ª´ Obj tr√™n th√†nh _limit=10&_page=1
          const paramsString= queryString.stringify(filters)
          const requestUrl=`http://js-post-api.herokuapp.com/api/posts?${paramsString}`;
          const response=await fetch(requestUrl)
          const responseJson=await response.json()
          console.log({responseJson});
          const {data,pagination}=responseJson;
          setPostList(data);
          setPagination(pagination)
        } catch (error) {
          console.log('Err',error.message)
        }
     
        
      }
      console.log("Have arr")
      fetchPostLink();
    },[filters])
    //Ch·∫°y nhi·ªÅu l·∫ßn (sau khi render c≈©ng ch·∫°y)
    useEffect(()=>{
      console.log('No Have arr')
    })
    // H√†m ph√¢n trang(set l·∫°i state filter)
    function handlePageChange(newPage) {
     setFilters({
       ...filters,
       _page:newPage,
     })
      
    }
  function handleTodoClick(todo) {
    console.log(todo);
    // t√¨m ph·∫ßn t·ª≠ c√≥ index l√† c√°i m√¨nh truy·ªÅn v√†o sau ƒë√≥ x√≥a
    const index=todoList.findIndex(x=>x.id===todo.id);
    // n·∫øu kh√¥ng t√¨m th·∫•y th√¨ tr·∫£ v·ªÅ
    if(index <0) return
    //  n·∫øu t√¨m th·∫•y th√¨ x√≥a n√≥ ƒëi(l∆∞u √Ω c·∫ßn clone ra 1 state m·ªõi)
    const newTodoList=[...todoList]
    newTodoList.splice(index,1)
    setTodoList(newTodoList)
  }
  function handleTodoSubmit(value) {
      console.log(value);
      const newTodo={
        id:todoList.length + 1,
        ...value
      }
      const newTodoList=[...todoList];
      newTodoList.push(newTodo);
      // set l·∫°i state
      setTodoList(newTodoList)
      
  }
  function filterChange(newFilter) {
    setFilters({
      ...filters,
      _page:1,
      title_like:newFilter.searchTerm,
    })
    
  }
  const [showClock,setShowClock]=useState(true)
  return (
    <div className="app">
    <h1> React-Hook</h1>
  {showClock && <Clock/>}
    <button onClick={()=>setShowClock(false)}>Hide</button>
     <ColorBox />
     <PostFilterForm onSubmit={filterChange}/>
     <PostList posts={postList}/>
     <Pagination pagination={pagination} onPageChange={handlePageChange}/>
     <TodoForm onSubmit={handleTodoSubmit} />
  
    {/* {/* truy·ªÅn sang con v√† truy·ªÅn sang cha d√πng 1 func ƒë·ªÉ nh·∫≠n/} */}
     <TodoList todos={todoList} onTodoClick={handleTodoClick}/>
    </div>

  );
}

export default App;
